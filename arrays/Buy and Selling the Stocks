-----------------------------------Brute Force------------------------------------------------------
#include <iostream>
#include<bits/stdc++.h>

using namespace std;
int maxProfitObtained(vector<int>& Arr)
{
    int N= Arr.size();
    
    int maxi = INT_MIN;
    for(int i=1;i<N;i++)
    {
        
        for(int j=0;j<i;j++)
        {
            int profit = Arr[i]-Arr[j];
            maxi = max(maxi,profit);
        }
    }
    return maxi;
}
#Time Complexity:O(n^2)
----------------------------------------------Using DP------------------------------------------------------------------
int main()
{
    vector<int> Arr  ={7,1,5,3,6,4};
    cout<<"max_profit_Obtained:"<<" "<<maxProfitObtained(Arr);
}
#include <bits/stdc++.h>

using namespace std;

int maximumProfit(vector<int> &Arr){
    // Write your code here.
	int maxProfit = 0;
	int mini = Arr[0];
	
	for(int i=1;i<Arr.size();i++){
        int curProfit = Arr[i] - mini;
        maxProfit = max(maxProfit,curProfit);
        mini = min(mini,Arr[i]);
        }
	return maxProfit;
}

int main() {

  vector<int> Arr  ={7,1,5,3,6,4};

  cout<<"The maximum profit by selling the stock is "<<maximumProfit(Arr);
}
#time complexity:O(n).
