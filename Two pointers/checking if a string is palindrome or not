#include <iostream>

using namespace std;

string stringReverse(string s)
{
    int n = s.length();
    int start = 0;
    int end = n-1;
    while (start < end)
    {
        char temp = s[start];
        s[start] = s[end];
        s[end] = temp;
        start++;
        end--;
    }
    return s;
}

int main()
{
    cout<<"enter a string:";
    string s;
    cin >> s;
    string S = s;
    string r;
    r = stringReverse(s);
    if (S == r)
    {
        cout << "string is a palindrome";
    }
    else
    {
        cout << "string is not a palindrome";
    }

    return 0;
}
#using two pointers
#include <iostream>

using namespace std;
bool ispalindrome(string s)
{
    int n = s.length();
    int start =0;
    int end = n-1;
    while(start<end)
    {
        if(s[start]!=s[end])
        {
            return false;
        }
        start++;
        end--;
    }
    return true;
}

int main()
{
    cout<<"enter a string:";
    string s;
    cin>>s;
    if(ispalindrome(s))
    {
        cout<<"palindrome";
    }
    else{
        cout<<"not a palindrome";
    }
}
#Time complexity is O(n);
